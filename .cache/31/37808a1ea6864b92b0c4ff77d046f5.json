{"id":"classes/Blocks.js","dependencies":[{"name":"C:\\Users\\roust\\Documents\\js_Vladilen\\js-consrtuctor\\package.json","includedInParent":true,"mtime":1644493376086}],"generated":{"js":"function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Block = /*#__PURE__*/_createClass(function Block(type, value, options) {\n  _classCallCheck(this, Block);\n\n  this.type = type;\n  this.value = value;\n  this.options = options;\n});"},"sourceMaps":{"js":{"mappings":[{"name":"Block","generated":{"line":7,"column":4},"source":"classes/Blocks.js","original":{"line":1,"column":6}},{"generated":{"line":7,"column":38},"source":"classes/Blocks.js","original":{"line":2,"column":4}},{"name":"type","generated":{"line":7,"column":53},"source":"classes/Blocks.js","original":{"line":2,"column":16}},{"generated":{"line":7,"column":57},"source":"classes/Blocks.js","original":{"line":2,"column":4}},{"name":"value","generated":{"line":7,"column":59},"source":"classes/Blocks.js","original":{"line":2,"column":22}},{"generated":{"line":7,"column":64},"source":"classes/Blocks.js","original":{"line":2,"column":4}},{"name":"options","generated":{"line":7,"column":66},"source":"classes/Blocks.js","original":{"line":2,"column":29}},{"generated":{"line":7,"column":73},"source":"classes/Blocks.js","original":{"line":2,"column":4}},{"generated":{"line":7,"column":75},"source":"classes/Blocks.js","original":{"line":2,"column":37}},{"generated":{"line":8,"column":0},"source":"classes/Blocks.js","original":{"line":2,"column":37}},{"generated":{"line":10,"column":0},"source":"classes/Blocks.js","original":{"line":3,"column":8}},{"name":"type","generated":{"line":10,"column":7},"source":"classes/Blocks.js","original":{"line":3,"column":13}},{"generated":{"line":10,"column":11},"source":"classes/Blocks.js","original":{"line":3,"column":8}},{"name":"type","generated":{"line":10,"column":14},"source":"classes/Blocks.js","original":{"line":3,"column":20}},{"generated":{"line":10,"column":18},"source":"classes/Blocks.js","original":{"line":3,"column":8}},{"generated":{"line":11,"column":0},"source":"classes/Blocks.js","original":{"line":4,"column":8}},{"name":"value","generated":{"line":11,"column":7},"source":"classes/Blocks.js","original":{"line":4,"column":13}},{"generated":{"line":11,"column":12},"source":"classes/Blocks.js","original":{"line":4,"column":8}},{"name":"value","generated":{"line":11,"column":15},"source":"classes/Blocks.js","original":{"line":4,"column":21}},{"generated":{"line":11,"column":20},"source":"classes/Blocks.js","original":{"line":4,"column":8}},{"generated":{"line":12,"column":0},"source":"classes/Blocks.js","original":{"line":5,"column":8}},{"name":"options","generated":{"line":12,"column":7},"source":"classes/Blocks.js","original":{"line":5,"column":13}},{"generated":{"line":12,"column":14},"source":"classes/Blocks.js","original":{"line":5,"column":8}},{"name":"options","generated":{"line":12,"column":17},"source":"classes/Blocks.js","original":{"line":5,"column":23}},{"generated":{"line":12,"column":24},"source":"classes/Blocks.js","original":{"line":5,"column":8}},{"generated":{"line":13,"column":0},"source":"classes/Blocks.js","original":{"line":6,"column":5}}],"sources":{"classes/Blocks.js":"class Block {\r\n    constructor(type, value, options){\r\n        this.type = type\r\n        this.value = value\r\n        this.options = options\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"1ff2dec3dbdf8620db3891659614eee0","cacheData":{"env":{}}}